{"version":3,"sources":["scripts/engine.js","img/rps_rock.png","img/rps_paper.png","img/rps_scissors.png","components/buttonGroup.js","components/Footer.js","App.js","index.js"],"names":["ACTIONS","ROCK","PAPER","SCISSORS","RESULTS","WIN","LOSE","DRAW","engineResources","computerPlay","result","roll","Math","random","floor","console","warn","playRound","playerChoice","computerChoice","toLowerCase","ButtonGroup","buttons","clickFunction","useState","clickedId","setClickedId","className","Object","values","map","objVal","i","onClick","e","id","prevState","handleClick","currentYear","Date","getFullYear","Footer","href","target","rel","imgSelector","action","rock","paper","scissors","App","image","player","computer","input","gameState","setGameState","playerScore","computerScore","effectState","setEffectState","btnState","setBtnState","count","setCount","useEffect","setTimeout","newInput","getAttribute","newImage","rps","roundResult","src","alt","click","disabled","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.23ef2995.chunk.js","sourcesContent":["const ACTIONS = {\n  ROCK: 'rock',\n  PAPER: 'paper',\n  SCISSORS: 'scissors'\n};\n\nconst RESULTS = {\n    WIN: 'win',\n    LOSE: 'lose',\n    DRAW: 'draw'\n}\n\nconst computerPlay = () => {\n    let roll = Math.random() * 300, result;\n    switch (true) {\n        case Math.floor(roll) % 3 === 0:\n            result = ACTIONS.ROCK;\n            break;\n        case Math.floor(roll) % 3 === 1:\n            result = ACTIONS.PAPER;\n            break;\n        case Math.floor(roll) % 3 === 2:\n            result = ACTIONS.SCISSORS;\n            break;\n        default:\n            console.warn('result outside parameter');\n            break;\n    }\n    return result;\n}\n\nconst playRound = (playerChoice, computerChoice) => {\n    playerChoice = playerChoice.toLowerCase();\n    if (playerChoice === ACTIONS.ROCK) {\n        switch (computerChoice) {\n            case ACTIONS.ROCK:\n                return RESULTS.DRAW;\n            case ACTIONS.PAPER:\n                return RESULTS.LOSE;\n            case ACTIONS.SCISSORS:\n                return RESULTS.WIN;\n            default:\n                return null;\n        }\n    } else if (playerChoice === ACTIONS.PAPER) {\n        switch (computerChoice) {\n            case ACTIONS.ROCK:\n                return RESULTS.WIN;\n            case ACTIONS.PAPER:\n                return RESULTS.DRAW;\n            case ACTIONS.SCISSORS:\n                return RESULTS.LOSE;\n            default:\n                return null;\n        }\n    } else {\n        switch (computerChoice) {\n            case ACTIONS.ROCK:\n                return RESULTS.LOSE;\n            case ACTIONS.PAPER:\n                return RESULTS.WIN;\n            case ACTIONS.SCISSORS:\n                return RESULTS.DRAW;\n            default:\n                return null;\n        }\n    }\n}\n\n\nconst engineResources = { computerPlay, playRound, ACTIONS, RESULTS };\nexport default engineResources;","export default __webpack_public_path__ + \"static/media/rps_rock.e3a4fe42.png\";","export default __webpack_public_path__ + \"static/media/rps_paper.547a64b2.png\";","export default __webpack_public_path__ + \"static/media/rps_scissors.960c262a.png\";","import React, { useState } from 'react';\nimport '../App.css';\n\nconst ButtonGroup = ({ buttons, clickFunction }) => {\n    //takes in one input parameter buttons where button is an object with key value pairs\n    const [clickedId, setClickedId] = useState(() => -1);\n    const handleClick = (e, id) => {\n        if (id === clickedId) {\n            setClickedId(prevState => -1);\n            clickFunction(e);\n        } else {\n            setClickedId(prevState => id);\n            clickFunction(e);\n        }\n    }\n\n    return (\n        <div className=\"buttons has-addons is-centered\">\n            {Object.values(buttons).map((objVal, i) => (\n                <button \n                    key={i}\n                    data-value={objVal}\n                    onClick={(e) => handleClick(e, i)}\n                    className={`button has-text-weight-semibold is-size-5-tablet ${i === clickedId ? 'active' : ''}`}\n                >\n                    {objVal}\n                </button>\n            ))}\n        </div>\n    );\n};\n\n\nexport default ButtonGroup;","import React from \"react\";\nimport { FaGithub } from \"react-icons/fa\";\n\nconst currentYear = new Date().getFullYear();\n\nexport default function Footer() {\n  return (\n    <footer className=\"is-flex is-justify-content-center\">\n      <a href=\"https://github.com/anon-legion\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">\n        <p className=\"is-clickable is-size-5 has-text-grey-dark\">{`Copyright Â© 2021-${currentYear} =GV=`}\n          <span className=\"icon-text\">\n            <span className=\"icon is-medium has-text-grey-dark\">\n              <FaGithub />\n            </span>\n          </span>\n        </p>\n      </a>\n    </footer>\n  )\n};","import React, { useState, useEffect} from 'react';\nimport './App.css';\nimport engineResources from './scripts/engine.js';\nimport rock from './img/rps_rock.png';\nimport paper from './img/rps_paper.png';\nimport scissors from './img/rps_scissors.png';\nimport ButtonGroup from './components/buttonGroup.js';\nimport Footer from './components/Footer.js';\nimport 'bulma/css/bulma.min.css';\n\n\nconst { computerPlay, playRound, ACTIONS, RESULTS } = engineResources;\n\nconst imgSelector = (action) => {\n  switch (action) {\n    case ACTIONS.ROCK:\n      return rock;\n    case ACTIONS.PAPER:\n      return paper;\n    case ACTIONS.SCISSORS:\n      return scissors;\n    default:\n      return null;\n  }\n}\n\n\nfunction App() {\n  const [gameState, setGameState] = useState(() => ({\n    image: {player: null, computer: null},\n    input: {player: '', computer: ''}\n  }));\n\n\n  const [effectState, setEffectState] = useState(() => ({\n    result: null,\n    playerScore: 0,\n    computerScore: 0\n  }));\n\n  const [btnState, setBtnState] = useState(() => null);\n\n  const [count, setCount] = useState(() => 0);\n\n  \n  useEffect(() => {\n    if (count > 0) {\n      setTimeout(() => setCount(prevState => prevState - 1), 300)\n    } else {\n      if (!btnState) {\n        return null;\n      }\n      rps();\n    }\n  }, [count])\n\n\n  useEffect(() => {\n    if(!gameState.input.player) {\n      return null;\n    } else {\n      const roundResult = playRound(gameState.input.player, gameState.input.computer);\n      switch (roundResult) {\n        case RESULTS.WIN:\n          setEffectState(prevState => {\n            return {...prevState, result: roundResult, playerScore: prevState.playerScore + 1 };\n          });\n          break;\n        case RESULTS.LOSE:\n          setEffectState(prevState => {\n            return {...prevState, result: roundResult, computerScore: prevState.computerScore + 1 };\n          });\n          break;\n        case RESULTS.DRAW:\n          setEffectState(prevState => {\n            return {...prevState, result: roundResult };\n          });\n          break;\n        default:\n          return null;\n      };\n    }\n  }, [gameState]);\n  \n\n  function btnClickFunction(e) {\n    e.target === btnState ? setBtnState(prevState => null) : setBtnState(prevState => e.target);\n  }\n\n\n  function rps() {\n    const newInput = {player: btnState.getAttribute('data-value'), computer: computerPlay()}; \n    const newImage = {player: imgSelector(newInput.player), computer: imgSelector(newInput.computer)};\n    setGameState(prevState => {\n      return {image: newImage, input: newInput};\n    });\n  };\n\n\n  function resetOnClick() {\n    setGameState(prevState => {\n      return {\n        image: {player: null, computer: null},\n        input: {player: '', computer: ''}\n      };\n    });\n    setEffectState(prevState => {\n      return {\n        result: null,\n        playerScore: 0,\n        computerScore: 0\n      };\n    });\n    if (btnState) {\n      btnState.click();\n      setBtnState(prevState => null);\n    };\n  };\n\n\n  function goOnClick() {\n    setCount(prevState => 3);\n  }\n\n\n  return (\n    <>\n      <header className=\"hero\">\n        <div className=\"hero-body p-4\">\n          <h1 className=\"title is-1 is-size-3-mobile\">World RPS Championship</h1>\n          <h2 className=\"subtitle is-3 has-text-grey-lighter is-size-6-mobile\">(You vs the best, Rock Paper Scissors!)</h2>\n        </div>\n      </header>\n      <main className=\"section is-flex is-flex-direction-column is-align-items-center\">\n        <div className=\"container\">\n          <div className=\"level is-flex\">\n            <div className=\"level-left\">\n              <div className=\"level-item has-item-gap\">\n                <h2 className=\"is-size-3 has-text-grey-lighter\">{effectState.playerScore}</h2>\n                <h1 className=\"is-size-3 has-text-weight-semibold\">Player</h1>\n              </div>\n            </div>\n            <div className=\"level-right is-flex is-align-items-center m-0\">\n              <div className=\"level-item has-item-gap\">\n                <h1 className=\"is-size-3 has-text-weight-semibold\">Champ</h1>\n                <h2 className=\"is-size-3 has-text-grey-lighter\">{effectState.computerScore}</h2>\n              </div>\n            </div>\n          </div>\n          <div className=\"illustration\">\n            <figure className=\"image\">\n              <img\n                src={gameState.image.player}\n                alt={`${gameState.input.player}`}\n              />\n            </figure>\n            <figure className=\"image\">\n              <img src={gameState.image.computer} alt={`${gameState.input.computer}`} />\n            </figure>\n          </div>\n        </div>\n        <div className=\"result\">\n          <h1 className=\"is-size-3 is-uppercase has-text-weight-semibold\">{count <= 0 ? effectState.result : count}</h1>\n        </div>\n        <ButtonGroup buttons={ACTIONS} clickFunction={btnClickFunction}/>\n        <div className=\"btn-controls\">\n          <button className=\"is-size-5\" onClick={resetOnClick} disabled={count > 0 ? true : false}>Reset</button>\n          <button className=\"is-size-5\" onClick={goOnClick} disabled={count > 0 || !btnState ? true : false}>Go!</button>\n        </div>\n      </main>\n      <Footer />\n    </>\n  );\n}\n\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}